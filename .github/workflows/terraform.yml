name: Terraform CI/CD

on:
  workflow_run:
    workflows: ["Verify Terraform Files"]
    types: [completed]

jobs:
  terraform:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      # 1️⃣ Checkout
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      # 2️⃣ List files (debug)
      - name: List repo files
        run: ls -R

      # 3️⃣ Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      # 4️⃣ Restore PEM key (for EC2 or Lightsail only)
      - name: Restore PEM key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY_B64 }}" | base64 --decode > my-key.pem
          chmod 600 my-key.pem

      # 5️⃣ Export Public Key (conditionally)
      - name: Export Public Key (if needed)
        id: public_key
        run: |
          if grep -qE 'aws_instance|aws_lightsail_instance' *.tf; then
            echo "EC2 or Lightsail detected — generating public key"
            ssh-keygen -y -f my-key.pem > my-key.pub
            echo "needs_public_key=true" >> $GITHUB_OUTPUT
          else
            echo "No EC2/Lightsail — skipping public key"
            echo "needs_public_key=false" >> $GITHUB_OUTPUT
          fi

      # 6️⃣ Terraform Init
      - name: Terraform Init
        run: terraform init -input=false

      # 7️⃣ Terraform Validate
      - name: Terraform Validate
        run: terraform validate

      # 8️⃣ Terraform Format Check
      - name: Terraform Format Check
        run: terraform fmt -check

      # 9️⃣ Terraform Plan (conditionally include public key)
      - name: Terraform Plan
        run: |
          if [ "${{ steps.public_key.outputs.needs_public_key }}" = "true" ]; then
            terraform plan -var "public_key=$(cat my-key.pub)" -out=tfplan -input=false
          else
            terraform plan -out=tfplan -input=false
          fi

      # 🔟 Terraform Apply
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      # 11️⃣ Terraform Outputs
      - name: Terraform Outputs
        run: terraform output
